{"version":3,"sources":["Components/SongUtils.js","Components/audio/Instrument.js","Components/audio/Note.js","Components/audio/Keyboard.js","Components/menu/Menu.js","Components/Composer/SettingsObj.js","Components/AsyncPrompts.js","assets/icons/rotate.svg","App.js","Components/Composer/menu/Menu.js","Components/Composer/ComposerNote.js","Components/Composer/MultiSwitch.js","Components/Composer/ComposerKeyboard.js","Components/Composer/ComposerCache.js","Components/Composer/ComposerCanvas.js","assets/icons/addCell.svg","assets/icons/removeCell.svg","Composer.js","serviceWorkerRegistration.js","index.js"],"names":["Recording","init","start","Date","getTime","console","log","addNote","index","notes","length","note","push","this","Song","name","data","version","bpm","pitch","isComposed","isComposedVersion","Object","entries","forEach","entry","LoggerEvent","title","text","timeout","trigger","window","dispatchEvent","event","undefined","CustomEvent","detail","PlayingSong","timestamp","FileDownloader","type","download","file","dataType","encodeURIComponent","el","document","createElement","style","body","appendChild","setAttribute","click","remove","TempoChangers","id","changer","color","ComposedSong","breakpoints","columns","selected","Array","fill","e","column","Column","tempoChanger","ComposerSongDeSerialization","song","obj","columnObj","ColumnNote","ComposerToRecording","recordedSong","bpmPerMs","Math","floor","totalTime","ComposerSongSerialization","columnArr","map","layer","genshinLayout","RecordingToComposed","bpmToMs","composed","converted","grouped","threshold","result","row","shift","amount","i","splice","groupByNotes","combinations","columnNote","difference","paddingColumns","finalPadding","col","pitchArr","getPitchChanger","indexOf","Number","pow","toFixed","NoteData","noteNames","url","buffer","ArrayBuffer","Instrument","instrumentName","setBuffers","bufferArray","layout","load","audioContext","a","requests","fetch","then","arrayBuffer","Promise","resolve","reject","decodeAudioData","all","buffers","keyboardLayout","split","mobileLayout","keyboard","mobile","Note","props","state","className","clicked","toBeClicked","toBeClickedNext","noteText","isMobile","animation","transition","fadeTime","onPointerDown","clickAction","alt","src","Component","Keyboard","handleKeyboard","letter","key","toUpperCase","activeElement","tagName","instrument","find","handleClick","handlePlayEvent","setState","playTimestamp","playSong","handlePracticeEvent","practiceSong","JSON","parse","stringify","loadInstrument","newInstrument","urls","preload","songLength","chunks","chunk","delay","startTime","j","songToPractice","setSlider","size","position","changeSliderPosition","sliderState","functions","changeSliderState","previous","delayMs","playSound","stopSong","indexClicked","findIndex","isRecording","handleRecording","setTimeout","source","createBufferSource","playbackRate","value","settings","caveMode","connect","reverbAudioContext","destination","AudioContext","webkitAudioContext","loadReverb","addEventListener","removeEventListener","audioCtx","r","catch","b","impulse_response","convolver","createConvolver","gainNode","createGain","gain","keyboardSize","transform","ms","res","Menu","toggleMenu","override","newState","open","selectSideMenu","selection","selectedMenu","changeSelectedSongType","selectedSongType","importSong","reader","FileReader","target","isArray","songNotes","bitsPerPage","includes","getSongType","time","l","SkyToGenshin","addSong","error","readAsText","downloadSong","_id","json","sideClass","handleSettingChange","changePage","songs","filter","composedSongs","CloseMenu","action","icon","faMusic","faCog","faCompactDisc","MenuPanel","visible","onChange","onClick","SongRow","SettingsRow","objKey","update","href","children","faTimes","useState","valueHook","setter","options","checked","onBlur","deleteSong","removeSong","faCrosshairs","faDownload","faTrash","MenuItem","instruments","ComposerSettings","settingVesion","songSetting","layer2","layer3","beatMarks","columnsPerCanvas","MainPageSettings","asyncPrompt","question","container","innerText","input","placeholder","cancel","ok","append","classList","add","asyncConfirm","GenshinButton","active","App","getSettings","storedSettings","localStorage","getItem","updateSettings","setItem","setting","syncSongs","dbCol","toArray","oldState","keyboardData","practicingSong","thereIsSong","songExists","findOne","insert","recording","handleSliderEvent","playingSong","toggleRecord","promptString","songName","eventData","db","ZangoDb","Db","collection","keyboardFunctions","menuFunctions","menuData","rotateImg","faStop","min","max","faSyncAlt","toggleMenuVisible","loadSong","updateSong","songFunctions","hasUnsaved","hasChanges","menuClass","menuOpen","currentSong","faSave","createNewSong","ComposerNote","next","prev","layers","MultiSwitch","backgroundColor","selectedColor","buttonsClass","onSelect","ComposerKeyboard","notesIndexes","currentColumn","changeLayer","handleTempoChanger","toString","noteData","standards","ComposerCache","width","height","margin","timelineHeight","generate","canvas","drawColumn","cache","toDataURL","standardColumn","standard","standardLarger","roundNess","noteWidth","noteHeight","ctx","getContext","fillStyle","roundRect","strokeStyle","lineWidth","beginPath","arc","PI","columnsLarger","breakpoint","x","notesFigures","app","PIXI","self","borderWidth","fillRect","moveTo","lineTo","stroke","y","radius","tl","tr","br","bl","defaultRadius","side","quadraticCurveTo","closePath","NumOfColumnsPerCanvas","ComposerCanvas","resetPointerDown","stageSelected","sliderSelected","stagePreviousPositon","handleWheel","deltaY","selectColumn","global","totalWidth","relativePos","handleStageSlide","throttleStage","isMovingLeft","abs","toAdd","handleBreakpoints","direction","selectedColumn","v","sort","handleSlide","parentWidth","nearestEven","screen","currentBreakpoint","canvasRef","React","createRef","current","_canvas","s","sizes","xPos","counter","switcher","counterLimit","relativeColumnWidth","stageSize","stagePos","ref","anchor","interactive","pointerdown","pointermove","pos","currentPos","boundaries","isVisible","tempoChangersCache","standardCache","standardBg","background","backgroundCache","isSelected","isBreakpoint","faStepBackward","faStepForward","antialias","autoDensity","pointertap","pointerup","draw","g","clear","beginFill","drawRect","image","lineStyle","drawRoundedRect","toggleBreakpoint","faMinusCircle","faPlusCircle","interactiveChildren","positions","num","round","reverse","formatMillis","millis","minutes","seconds","calculateLength","end","totalLength","replaceAt","string","replacement","valueOf","substring","Composer","togglePlay","n","layerIndex","currentNote","askForSongName","askForSongUpdate","stateSong","addColumns","songColumns","removeColumns","isPlaying","msPerBPM","previousTime","handleTick","newIndex","indexOfBreakpoint","ignoreAudio","playbackInterval","canvasFunctions","canvasData","faBars","faChevronRight","faChevronLeft","faPause","faPlay","addCell","removeCell","faPlus","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","Index","page","selectedPage","logEvent","floatingMessage","floatingMessageClass","ReactDOM","render","StrictMode","getElementById","URL","process","origin","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.23d7accf.chunk.js","sourcesContent":["\r\nclass Recording {\r\n  constructor() {\r\n    this.start = new Date().getTime()\r\n    this.notes = []\r\n  }\r\n  init = () => {\r\n    this.start = new Date().getTime() - 100\r\n    console.log(\"Started new recording\")\r\n  }\r\n  addNote = (index) => {\r\n    if (this.notes.length === 0) this.init()\r\n    let currentTime = new Date().getTime()\r\n    let note = [index, currentTime - this.start]\r\n    this.notes.push(note)\r\n  }\r\n}\r\nclass Song {\r\n  constructor(name, notes = [], data = {}) {\r\n    this.name = name\r\n    this.version = 1\r\n    this.notes = notes\r\n    this.bpm = 220\r\n    this.pitch = \"C\"\r\n    this.data = {\r\n      isComposed: false,\r\n      isComposedVersion: false\r\n    }\r\n    Object.entries(data).forEach((entry) => {\r\n      this.data[entry[0]] = entry[1]\r\n    })\r\n  }\r\n}\r\nclass LoggerEvent {\r\n  constructor(title, text, timeout) {\r\n    this.title = title\r\n    this.timeout = timeout\r\n    this.text = text\r\n    if (timeout === undefined) this.timeout = 3000\r\n    this.event = new CustomEvent(\"logEvent\", {\r\n      detail: {\r\n        title: this.title,\r\n        text: this.text,\r\n        timeout: this.timeout\r\n      }\r\n    })\r\n  }\r\n  trigger = () => {\r\n    window.dispatchEvent(this.event)\r\n  }\r\n}\r\nclass NoteData {\r\n  constructor(index, noteNames, url) {\r\n    this.index = index\r\n    this.noteNames = noteNames\r\n    this.url = url\r\n    this.buffer = new ArrayBuffer(8)\r\n    this.clicked = false\r\n  }\r\n}\r\nclass PlayingSong {\r\n  constructor(notes) {\r\n    this.timestamp = new Date().getTime()\r\n    this.notes = notes\r\n  }\r\n}\r\nclass FileDownloader {\r\n  constructor(type) {\r\n    if (type === undefined) type = \"text/json\"\r\n    this.dataType = \"data:\" + type + \";charset=utf-8,\"\r\n  }\r\n  download = (file, name) => {\r\n    let data = this.dataType + encodeURIComponent(file)\r\n    var el = document.createElement(\"a\")\r\n    el.style = \"display:none\"\r\n    document.body.appendChild(el)\r\n    el.setAttribute(\"href\", data)\r\n    el.setAttribute(\"download\", name)\r\n    el.click();\r\n    el.remove();\r\n  }\r\n}\r\n\r\nlet TempoChangers = [\r\n  {\r\n    id: 0,\r\n    text: \"1\",\r\n    changer: 1,\r\n    color: 0x515c6f\r\n  }, {\r\n    id: 1,\r\n    text: \"1/2\",\r\n    changer: 1 / 2,\r\n    color: 0x4d694e\r\n  }, {\r\n    id: 2,\r\n    text: \"1/4\",\r\n    changer: 1 / 3,\r\n    color: 0x434c7d\r\n  }, {\r\n    id: 3,\r\n    text: \"1/8\",\r\n    changer: 1 / 4,\r\n    color: 0x6f5168\r\n  }\r\n]\r\nclass ComposedSong {\r\n  constructor(name, notes = [], data = {}) {\r\n    data.isComposed = true\r\n    data.isComposedVersion = true\r\n    this.version = 1\r\n    this.data = data\r\n    this.name = name\r\n    this.bpm = 220\r\n    this.pitch = \"C\"\r\n    this.notes = notes\r\n    this.breakpoints = [0]\r\n    this.columns = []\r\n    this.selected = 0\r\n    new Array(100).fill().forEach((e) => {\r\n      let column = new Column()\r\n      column.tempoChanger = 0\r\n      this.columns.push(column)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nfunction ComposerSongDeSerialization(song) {\r\n  let obj = {\r\n    data: song.data,\r\n    name: song.name,\r\n    bpm: song.bpm ?? 220,\r\n    pitch: song.pitch ?? \"C\",\r\n    breakpoints: song.breakpoints ?? [],\r\n    notes: [],\r\n    selected: 0,\r\n    columns: []\r\n  }\r\n  song.columns.forEach(column => {\r\n    let columnObj = new Column()\r\n    columnObj.tempoChanger = column[0]\r\n    column[1].forEach(note => {\r\n      columnObj.notes.push(new ColumnNote(note[0], note[1]))\r\n    })\r\n    obj.columns.push(columnObj)\r\n  })\r\n  return obj\r\n}\r\nfunction ComposerToRecording(song) {\r\n  let recordedSong = new Song(song.name)\r\n  let bpmPerMs = Math.floor(60000 / song.bpm)\r\n  let totalTime = 100\r\n  song.columns.forEach(column => {\r\n    column[1].forEach(note => {\r\n      recordedSong.notes.push([note[0], totalTime])\r\n    })\r\n    totalTime += Math.floor(bpmPerMs * TempoChangers[column[0]].changer)\r\n  })\r\n  return recordedSong\r\n}\r\nfunction ComposerSongSerialization(song) {\r\n  let obj = {\r\n    data: song.data,\r\n    name: song.name,\r\n    bpm: song.bpm,\r\n    pitch: song.pitch,\r\n    breakpoints: song.breakpoints,\r\n    columns: []\r\n  }\r\n\r\n  /*\r\n      notes = [tempoChanger,notes] ----> note = [index,layer]\r\n      tempoChanger = Number\r\n  */\r\n  song.columns.forEach(column => {\r\n    let columnArr = [column.tempoChanger]\r\n    let notes = column.notes.map(note => {\r\n      return [note.index, note.layer]\r\n    })\r\n    columnArr[1] = notes\r\n    obj.columns.push(columnArr)\r\n  })\r\n  return obj\r\n}\r\nfunction getSongType(song) {\r\n  try {\r\n    if(Array.isArray(song) && song.length > 0) song = song[0]\r\n    if(Array.isArray(song.songNotes) && song.bitsPerPage !== undefined){\r\n      //sky\r\n      if([true,\"true\"].includes(song.isComposed)){\r\n        return \"skyComposed\"\r\n      }else{\r\n        return \"skyRecorded\"\r\n      }\r\n    }else{\r\n      //genshin\r\n      if(song.data.isComposedVersion){\r\n        if(typeof song.name !== \"string\") return \"none\"\r\n        if(typeof song.bpm !== \"number\") return \"none\"\r\n        if(!pitchArr.includes(song.pitch)) return \"none\"\r\n        if(Array.isArray(song.breakpoints)){\r\n          if(song.breakpoints.length > 0 ){\r\n            if(typeof song.breakpoints[0] !== \"number\") return \"none\"\r\n          }\r\n        }else{\r\n          return \"none\"\r\n        }\r\n        if(Array.isArray(song.columns)){\r\n          if(song.columns.length > 0 ){\r\n            let column = song.columns[0]\r\n            if(typeof column[0] !== \"number\") return \"none\"\r\n          }\r\n        }else{\r\n          return \"none\"\r\n        }\r\n        return \"genshinComposed\"\r\n      }else{\r\n        if(typeof song.name !== \"string\") return \"none\"\r\n        if(typeof song.bpm !== \"number\") return \"none\"\r\n        if(!pitchArr.includes(song.pitch)) return \"none\"\r\n        return \"genshinRecorded\"\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e)\r\n    return \"none\"\r\n  }\r\n  return \"none\"\r\n}\r\nlet genshinLayout = [7,8,9,10,11,12,13,0,1,2,3,4,5,6,6]\r\nfunction SkyToGenshin(song) {\r\n  let result = new Song(\"Error\")\r\n  try{\r\n    song = song[0]\r\n    result = new Song(song.name)\r\n    result.bpm = song.bpm || 220\r\n    result.pitch = pitchArr[song.pitch || 0]\r\n    let songNotes = song.songNotes\r\n    songNotes.forEach(note => {\r\n      let index = note.key.split(\"Key\")[1]\r\n      result.notes.push([genshinLayout[index], note.time,note.l || 1])\r\n    })\r\n    if([true,\"true\"].includes(song.isComposed)){\r\n      result = ComposerSongSerialization(RecordingToComposed(result))\r\n    }else{\r\n      result.notes = result.notes.map(e => [e[0],e[1]])\r\n    }\r\n\r\n\r\n  }catch (e){\r\n    console.log(e)\r\n    return new Song(\"Error importing\")\r\n  }\r\n  return result\r\n}\r\nfunction RecordingToComposed(song){\r\n  let bpmToMs = Math.floor(60000 / song.bpm)\r\n  let composed = new ComposedSong(song.name,[])\r\n  composed.bpm = song.bpm\r\n  composed.pitch = song.pitch\r\n  let notes = song.notes\r\n  let converted = []\r\n  let grouped = groupByNotes(notes,bpmToMs/9)\r\n  let combinations = [bpmToMs, Math.floor(bpmToMs / 2), Math.floor(bpmToMs / 4), Math.floor(bpmToMs / 8)]\r\n  for(let i = 0; i< grouped.length; i++){\r\n    let column = new Column()\r\n    column.notes = grouped[i].map(note => {\r\n      let columnNote = new ColumnNote(note[0])\r\n      if(note[2] === 1) columnNote.layer = \"100\"\r\n      if(note[2] === 2) columnNote.layer = \"010\"\r\n      if(note[2] === 3) columnNote.layer = \"110\"\r\n      if(note[2] === undefined) columnNote.layer = \"100\"\r\n      return columnNote\r\n    })\r\n    let next = grouped[i + 1] || [[0,0,0]]\r\n    let difference = next[0][1] - grouped[i][0][1] \r\n    let paddingColumns = []\r\n    while(difference >= combinations[3]){\r\n      if(difference / combinations[0] >= 1){\r\n        difference -= combinations[0]\r\n        paddingColumns.push(0)\r\n      }else if(difference / combinations[1] >= 1){\r\n        difference -= combinations[1]\r\n        paddingColumns.push(1)\r\n      }else if(difference / combinations[2] >= 1){\r\n        difference -= combinations[2]\r\n        paddingColumns.push(2)\r\n      }else if(difference / combinations[3] >= 1){\r\n        difference -= combinations[3]\r\n        paddingColumns.push(3)\r\n      }\r\n    }\r\n    let finalPadding = []\r\n    column.tempoChanger = paddingColumns.shift() || 0\r\n    paddingColumns = paddingColumns.forEach((col,i) => {\r\n      let column = new Column()\r\n      column.tempoChanger = col\r\n      finalPadding.push(column)\r\n    })\r\n    converted.push(column,...finalPadding)\r\n  }\r\n  composed.columns = converted\r\n  return composed\r\n}\r\nclass Column {\r\n  constructor(color = 0x515c6f) {\r\n    this.notes = []\r\n    this.color = color\r\n    this.tempoChanger = 0\r\n\r\n  }\r\n}\r\nfunction groupByNotes(notes,threshold ) {\r\n  let result = []\r\n  while(notes.length > 0){\r\n    let row = [notes.shift()]\r\n    let amount = 0\r\n    for(let i = 0; i< notes.length; i++){\r\n      if(row[0][1] > notes[i][1] - threshold) amount++\r\n    }\r\n    result.push([...row,...notes.splice(0,amount)])\r\n  }\r\n  return result\r\n}\r\nclass ColumnNote {\r\n  constructor(index, layer = \"000\", color = 0xd3bd8e) {\r\n    this.index = index\r\n    this.layer = layer\r\n    this.color = color\r\n  }\r\n}\r\nlet pitchArr = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"]\r\nfunction getPitchChanger(pitch) {\r\n  let index = pitchArr.indexOf(pitch)\r\n  if (index < 0) index = 0\r\n  return Number(Math.pow(2, index / 12).toFixed(2))\r\n}\r\nfunction randomNum(min, max) {\r\n  return Math.floor(Math.random() * max) + min\r\n}\r\nexport {\r\n  Recording,\r\n  Song,\r\n  NoteData,\r\n  FileDownloader,\r\n  LoggerEvent,\r\n  PlayingSong,\r\n  ComposedSong,\r\n  ColumnNote,\r\n  Column,\r\n  TempoChangers,\r\n  ComposerSongSerialization,\r\n  ComposerSongDeSerialization,\r\n  ComposerToRecording,\r\n  getPitchChanger,\r\n  getSongType,\r\n  SkyToGenshin,\r\n  RecordingToComposed\r\n}","class Instrument {\r\n    constructor(instrumentName) {\r\n        this.instrumentName = instrumentName\r\n        this.layout = []\r\n        this.keyboardLayout =\r\n            (\"Q W E R T Y U \" +\r\n                \"A S D F G H J \" +\r\n                \"Z X C V B N M\").split(\" \")\r\n\r\n        this.mobileLayout =\r\n            (\"do re mi fa so la ti \" +\r\n                \"do re mi fa so la ti \" +\r\n                \"do re mi fa so la ti\").split(\" \")\r\n        let i = 0\r\n        if (instrumentName === undefined) return\r\n        for (const noteName of this.keyboardLayout) {\r\n            let noteNames = {\r\n                keyboard: noteName,\r\n                mobile: this.mobileLayout[i]\r\n            }\r\n            let url = `./assets/audio/${instrumentName}/${i}.mp3`\r\n            let note = new NoteData(i, noteNames, url)\r\n            this.layout.push(note)\r\n            i++\r\n        }\r\n\r\n    }\r\n    setBuffers = (bufferArray) => {\r\n        bufferArray.forEach((buffer, i) => {\r\n            this.layout[i].buffer = buffer\r\n        })\r\n    }\r\n    load = async (audioContext) => {\r\n        const requests = this.layout.map(e => fetch(e.url)\r\n            .then(result => result.arrayBuffer())\r\n            .then(buffer => {\r\n                return new Promise((resolve, reject) => {\r\n                    audioContext.decodeAudioData(buffer, resolve, reject)\r\n                })\r\n            }))\r\n        let buffers = await Promise.all(requests)\r\n        this.setBuffers(buffers)\r\n        return true\r\n    }\r\n}\r\n\r\nclass NoteData {\r\n    constructor(index, noteNames, url) {\r\n        this.index = index\r\n        this.noteNames = noteNames\r\n        this.url = url\r\n        this.buffer = new ArrayBuffer(8)\r\n    }\r\n}\r\nexport default Instrument","import React, { Component } from 'react'\r\nimport isMobile from \"is-mobile\"\r\nclass Note extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        let data = this.props.data\r\n        let className = data.clicked ? \"note click-event\" : \"note\"\r\n        let toBeClicked = this.props.toBeClicked ? \" note-red\" : \"\"\r\n        let toBeClickedNext = this.props.toBeClickedNext ? \" note-border-click\" : \"\"\r\n        className += toBeClicked + toBeClickedNext\r\n        let noteText = isMobile() ? data.noteNames.mobile : data.noteNames.keyboard\r\n        let animation = { transition: `all ${this.props.fadeTime}s` }\r\n        return <button\r\n            onPointerDown={() => this.props.clickAction(data)}\r\n            className=\"button-hitbox\"\r\n\r\n        >\r\n            <div className={className} style={animation}>\r\n                <img\r\n                    alt={data.noteNames.mobile}\r\n                    src={`./assets/icons/keys/${data.noteNames.mobile}.svg`}>\r\n\r\n                </img>\r\n                <div className=\"note-name\">\r\n                    {noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Note","import React, { Component } from 'react'\r\nimport \"./Keyboard.css\"\r\nimport { getPitchChanger } from \"../SongUtils\"\r\nimport Instrument from \"./Instrument\"\r\nimport Note from \"./Note\"\r\nclass Keyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            instrument: new Instrument(),\r\n            audioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            reverbAudioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            playTimestamp: new Date().getTime(),\r\n            songToPractice: [],\r\n            sliderState: {\r\n                position: 0,\r\n                size: 0\r\n            }\r\n        }\r\n        this.loadInstrument(props.data.instrument)\r\n        try{\r\n            this.loadReverb()\r\n        }catch{\r\n            console.log(\"Error with reverb\")\r\n        }\r\n    }\r\n    handleKeyboard = (event) => {\r\n        let letter = event.key.toUpperCase()\r\n        if(document.activeElement.tagName === \"INPUT\") return\r\n        let note = this.state.instrument.layout.find(e => e.noteNames.keyboard === letter)\r\n        if (note !== undefined) {\r\n            this.handleClick(note)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyboard)\r\n        window.addEventListener(\"playSong\", this.handlePlayEvent)\r\n        window.addEventListener(\"practiceSong\", this.handlePracticeEvent)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard);\r\n        window.removeEventListener(\"playSong\", this.handlePlayEvent)\r\n        window.removeEventListener(\"practiceSong\", this.handlePracticeEvent)\r\n        let state = this.state\r\n        state.playTimestamp = new Date().getTime()\r\n    }\r\n    loadReverb() {\r\n        let audioCtx = this.state.audioContext\r\n        fetch(\"./assets/audio/reverb4.wav\")\r\n        .then(r => r.arrayBuffer().catch(function(){console.log(\"Error with reverb \")}))\r\n        .then(b => audioCtx.decodeAudioData(b, (impulse_response) => { \r\n            let convolver = audioCtx.createConvolver()\r\n            let gainNode = audioCtx.createGain()\r\n            gainNode.gain.value = 2.5\r\n            convolver.buffer = impulse_response\r\n            convolver.connect(gainNode)\r\n            gainNode.connect(audioCtx.destination)\r\n            this.setState({\r\n                reverbAudioContext:convolver\r\n            })\r\n        })).catch(function(){\r\n            console.log(\"Error with reverb\")\r\n        })\r\n    }\r\n    handlePlayEvent = (event) => {\r\n        let data = event.detail\r\n        this.setState({\r\n            playTimestamp: data.timestamp\r\n        }, () => this.playSong(data))\r\n    }\r\n    handlePracticeEvent = (event) => {\r\n        let data = event.detail\r\n        this.practiceSong(JSON.parse(JSON.stringify(data)))\r\n    }\r\n    loadInstrument = async (name) => {\r\n        let newInstrument = new Instrument(name)\r\n        let urls = newInstrument.layout.map(e => e.url)\r\n        let buffers = await this.preload(urls)\r\n        newInstrument.setBuffers(buffers)\r\n        this.setState({\r\n            instrument: newInstrument\r\n        })\r\n\r\n    }\r\n    practiceSong = (song) => {\r\n        let notes = song.notes\r\n        let songLength = notes.length\r\n        if (song.start === undefined) song.start = 0\r\n        notes.splice(0, song.start)\r\n        let chunks = []\r\n        for (let i = 0; notes.length > 0; i++) {\r\n            let chunk = {\r\n                notes: [notes.shift()],\r\n                delay: 0\r\n            }\r\n            let startTime = chunk.notes.length > 0 ? chunk.notes[0][1] : 0\r\n            for (let j = 0; j < notes.length && j < 20; j++) {\r\n                let difference = notes[j][1] - chunk.notes[0][1] - song.threshold\r\n                if (difference < 0) {\r\n                    chunk.notes.push(notes.shift())\r\n                    j--\r\n                }\r\n            }\r\n            chunk.delay = notes.length > 0 ? notes[0][1] - startTime : 0\r\n            chunks.push(chunk)\r\n        }\r\n        this.setState({\r\n            songToPractice: chunks\r\n        })\r\n        this.setSlider({\r\n            size: songLength,\r\n            position: song.start\r\n        })\r\n    }\r\n    changeSliderPosition = (position) => {\r\n        let sliderState = this.state.sliderState\r\n        sliderState.position += position\r\n        this.setState({\r\n            sliderState: sliderState\r\n        }, () => this.props.functions.changeSliderState(this.state.sliderState))\r\n    }\r\n    setSlider = (state) => {\r\n        this.setState({\r\n            sliderState: state\r\n        }, this.props.functions.changeSliderState(state))\r\n    }\r\n    playSong = async (song) => {\r\n        let notes = song.notes\r\n        let previous = 0\r\n        this.setSlider({\r\n            size: notes.length,\r\n            position: 0\r\n        })\r\n        if (notes.length === 0) return\r\n        for (let i = 0; i < notes.length; i++) {\r\n            let delay = notes[i][1] - previous\r\n            previous = notes[i][1]\r\n            let note = notes[i][0]\r\n            if (this.state.playTimestamp !== song.timestamp) break\r\n            await delayMs(delay)\r\n            this.changeSliderPosition(1)\r\n            this.playSound(this.state.instrument.layout[note])\r\n        }\r\n        this.props.functions.stopSong()\r\n    }\r\n    handleClick = (note) => {\r\n        let practiceSong = this.state.songToPractice\r\n        if (practiceSong.length > 0) {\r\n            let indexClicked = practiceSong[0]?.notes.findIndex(e => e[0] === note.index)\r\n            if (indexClicked !== -1) {\r\n                practiceSong[0].notes.splice(indexClicked, 1)\r\n                if (practiceSong[0].notes.length === 0) practiceSong.shift()\r\n                if (practiceSong.length === 0) this.props.functions.stopSong()\r\n                this.setState({\r\n                    songToPractice: practiceSong\r\n                }, () => this.changeSliderPosition(1))\r\n            }\r\n        }\r\n\r\n        this.playSound(note)\r\n\r\n    }\r\n    playSound = (note) => {\r\n        if (this.props.isRecording) this.props.functions.handleRecording(note)\r\n        note.clicked = true\r\n        setTimeout(() => {\r\n            note.clicked = false\r\n            this.setState({\r\n                instrument: this.state.instrument\r\n            })\r\n        }, 200)\r\n        const source = this.state.audioContext.createBufferSource()\r\n        source.playbackRate.value = getPitchChanger(this.props.settings.pitch.value)\r\n        source.buffer = note.buffer\r\n        if (this.props.settings.caveMode.value) {\r\n            source.connect(this.state.reverbAudioContext)\r\n        } else {\r\n            source.connect(this.state.audioContext.destination)\r\n        }\r\n        source.start(0)\r\n        this.setState({\r\n            instrument: this.state.instrument\r\n        })\r\n    }\r\n    preload = (urls) => {\r\n        const requests = urls.map(url => fetch(url)\r\n            .then(result => result.arrayBuffer())\r\n            .then(buffer => {\r\n                return new Promise((resolve, reject) => {\r\n                    this.state.audioContext.decodeAudioData(buffer, resolve, reject)\r\n                })\r\n            })\r\n        )\r\n        return Promise.all(requests)\r\n    }\r\n    render() {\r\n        let state = this.state\r\n        let size = this.props.settings.keyboardSize.value / 100\r\n        if(size < 0.5) size = 0.5\r\n        if(size > 1.5) size = 1.5\r\n        return <div className=\"keyboard\" style={{ transform: `scale(${size})` }}>\r\n            {state.instrument.layout.map(note => {\r\n                let toBeClicked = state.songToPractice[0]?.notes.find(e => e[0] === note.index) !== undefined\r\n                let toBeClickedNext = state.songToPractice[1]?.notes.find(e => e[0] === note.index) !== undefined\r\n                let fadeTime = state.songToPractice[0]?.delay !== undefined ? state.songToPractice[0]?.delay / 1000 : 0.1\r\n                return <Note\r\n                    key={note.index}\r\n                    toBeClicked={toBeClicked}\r\n                    fadeTime={fadeTime}\r\n                    toBeClickedNext={toBeClickedNext}\r\n                    data={note}\r\n                    clickAction={this.handleClick}\r\n                >\r\n\r\n                </Note>\r\n            })}\r\n        </div>\r\n    }\r\n}\r\nconst delayMs = ms => new Promise(res => setTimeout(res, ms))\r\nexport default Keyboard\r\n","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic, faTimes, faCog, faTrash, faCrosshairs, faDownload, faCompactDisc, } from '@fortawesome/free-solid-svg-icons'\r\nimport \"./menu.css\"\r\n\r\nimport { FileDownloader, LoggerEvent,getSongType,SkyToGenshin } from \"../SongUtils\"\r\nimport { FilePicker } from \"react-file-picker\"\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Settings\",\r\n            selectedSongType: \"recorded\",\r\n\r\n        }\r\n    }\r\n\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    importSong = (file) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', (event) => {\r\n\r\n            try {\r\n                let song = JSON.parse(event.target.result)\r\n                let type = getSongType(song)\r\n                if(type === \"none\"){\r\n                    return new LoggerEvent(\"Error\", \"Invalid song\").trigger() \r\n                }\r\n                if([\"skyRecorded\",\"skyComposed\"].includes(type)){\r\n                    song = SkyToGenshin(song)\r\n                }\r\n                console.log(type,song)\r\n                this.props.functions.addSong(song)\r\n            } catch (e) {\r\n                new LoggerEvent(\"Error\", \"Error importing song\").trigger()\r\n                console.error(e)\r\n            }\r\n\r\n        });\r\n        reader.readAsText(file)\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json, song.name + \".gensheet\")\r\n    }\r\n    render() {\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        let selectedMenu = this.state.selectedMenu\r\n        const { data, functions } = this.props\r\n        const { handleSettingChange } = functions\r\n        functions.toggleMenu = this.toggleMenu\r\n        functions.downloadSong = this.downloadSong\r\n        let changePage = this.props.functions.changePage\r\n        let songs = data.songs.filter(song => !song.data.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data.isComposedVersion)\r\n        return <div className=\"menu-wrapper\">\r\n            <div className=\"menu menu-visible\">\r\n                {this.state.open && <CloseMenu action={this.toggleMenu} />}\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu} className=\"margin-top-auto\">\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"Composer\")}>\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                        <FilePicker\r\n                            onChange={(file) => this.importSong(file)}\r\n                        >\r\n                            <button className=\"genshin-button\">\r\n                                Import song\r\n                            </button>\r\n                        </FilePicker>\r\n\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper\">\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\">\r\n                        Support me\r\n                    </a>\r\n\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1]) {\r\n                return\r\n            }\r\n        }\r\n\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if (data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e) {\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : <input\r\n                type={data.type}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />}\r\n    </div>\r\n}\r\nfunction SongRow(props) {\r\n    let data = props.data\r\n    let deleteSong = props.functions.removeSong\r\n    let playSong = props.functions.playSong\r\n    let practiceSong = props.functions.practiceSong\r\n    let toggleMenu = props.functions.toggleMenu\r\n    let downloadSong = props.functions.downloadSong\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            playSong(data)\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => {\r\n                practiceSong(data)\r\n                toggleMenu(false)\r\n            }}\r\n            >\r\n                <FontAwesomeIcon icon={faCrosshairs} />\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => deleteSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\nexport default Menu","let instruments = [\r\n    \"lyre\"\r\n]\r\nlet ComposerSettings = {\r\n    settingVesion: 2,\r\n\r\n    instrument: {\r\n        name: \"Instrument (Layer 1)\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 0,\r\n        options: instruments\r\n    },\r\n    layer2: {\r\n        name: \"Instrument (Layer 2)\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 0,\r\n        options: instruments\r\n    },\r\n    layer3: {\r\n        name: \"Instrument (Layer 3)\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 0,\r\n        options: instruments\r\n    },\r\n    bpm: {\r\n        name: \"Bpm\",\r\n        type: \"number\",\r\n        songSetting: true,\r\n        threshold: [0, 1000],\r\n        value: 220\r\n    },\r\n    beatMarks: {\r\n        name: \"Beat marks\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 0,\r\n        options: [\r\n            0,\r\n            3,\r\n            4\r\n        ]\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    columnsPerCanvas: {\r\n        name: \"Number of visible columns\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 35,\r\n        options: [\r\n            20,\r\n            25,\r\n            30,\r\n            35,\r\n            40,\r\n            45,\r\n            50\r\n        ]\r\n    },\r\n    caveMode:{\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    }\r\n}\r\nlet MainPageSettings = {\r\n    settingVesion: 1,\r\n    keyboardSize: {\r\n        name: \"Keyboard size\",\r\n        type: \"number\",\r\n        songSetting: false,\r\n        value: 100,\r\n        threshold: [0, 200]\r\n    },\r\n    instrument: {\r\n        name: \"Instrument\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 0,\r\n        options: [\r\n            \"lyre\"\r\n        ]\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    caveMode:{\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    }\r\n}\r\nexport {\r\n    ComposerSettings,\r\n    MainPageSettings\r\n}","async function asyncPrompt(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let input = document.createElement(\"input\")\r\n        input.type = \"text\"\r\n        input.placeholder = \"Write here\"\r\n        input.className = \"prompt-input\"\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Ok\"\r\n        cancel.innerText = \"Cancel\"\r\n        row.append(cancel, ok)\r\n        container.append(text, input, row)\r\n        document.body.appendChild(container)\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(null)\r\n            setTimeout(() => container.remove(),200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(input.value)\r\n            setTimeout(() => container.remove(),200)\r\n        })\r\n    })\r\n}\r\n\r\nasync function asyncConfirm(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Yes\"\r\n        cancel.innerText = \"No\"\r\n        row.append(cancel, ok)\r\n        container.append(text, row)\r\n        document.body.appendChild(container)\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(false)\r\n            setTimeout(() => container.remove(),200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(true)\r\n            setTimeout(() => container.remove(),200)\r\n        })\r\n    })\r\n}\r\n\r\nexport {\r\n    asyncConfirm,\r\n    asyncPrompt\r\n}","export default __webpack_public_path__ + \"static/media/rotate.e7c0f107.svg\";","import React, { Component } from 'react';\nimport './App.css';\nimport Keyboard from \"./Components/audio/Keyboard\"\nimport Menu from \"./Components/menu/Menu\"\nimport ZangoDb from \"zangodb\"\nimport { Song, Recording, LoggerEvent, PlayingSong, ComposerToRecording } from \"./Components/SongUtils\"\nimport { MainPageSettings } from \"./Components/Composer/SettingsObj\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSyncAlt, faStop } from '@fortawesome/free-solid-svg-icons'\nimport {asyncConfirm,asyncPrompt} from \"./Components/AsyncPrompts\"\nimport rotateImg from \"./assets/icons/rotate.svg\"\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.db = new ZangoDb.Db(\"Genshin\", { songs: [] })\n    this.recording = new Recording()\n    this.dbCol = {\n      songs: this.db.collection(\"songs\")\n    }\n    this.state = {\n      keyboardData: {\n        instrument: \"lyre\",\n        playingSong: {\n          timestamp: 0,\n          notes: []\n        },\n        practicingSong: {\n          timestamp: 0,\n          notes: [],\n          threshold: 100\n        }\n      },\n      isRecording: false,\n      songs: [],\n      settings: this.getSettings(),\n      sliderState: {\n        position: 0,\n        size: 0\n      },\n      thereIsSong: false\n    }\n    this.syncSongs()\n\n  }\n\n  getSettings = () => {\n    let storedSettings = localStorage.getItem(\"Genshin_Main_Settings\")\n    try {\n      storedSettings = JSON.parse(storedSettings)\n    } catch (e) {\n      storedSettings = null\n    }\n    if (storedSettings !== null) {\n      if (storedSettings.settingVesion !== MainPageSettings.settingVesion) {\n        this.updateSettings(MainPageSettings)\n        return MainPageSettings\n      }\n      return storedSettings\n    }\n    return MainPageSettings\n  }\n  updateSettings = (override) => {\n    let state\n    if (override !== undefined) {\n      state = override\n    } else {\n      state = this.state.settings\n    }\n    localStorage.setItem(\"Genshin_Main_Settings\", JSON.stringify(state))\n  }\n  handleSettingChange = (setting) => {\n    let settings = this.state.settings\n    let data = setting.data\n    settings[setting.key].value = data.value\n    if (setting.key === \"instrument\") {\n      this.loadInstrument(data.value)\n    }\n    this.setState({\n      settings: settings,\n    }, this.updateSettings)\n  }\n  syncSongs = async () => {\n    let songs = await this.dbCol.songs.find().toArray()\n    this.setState({\n      songs: songs\n    })\n  }\n  practiceSong = async (song, start = 0) => {\n    await this.stopSong()\n    let oldState = this.state.keyboardData.practicingSong\n    if (song.data.isComposedVersion) {\n      song = ComposerToRecording(song)\n      oldState.threshold = 10\n    }\n    oldState.notes = song.notes\n    oldState.timestamp = new Date().getTime()\n    let songToPractice = JSON.parse(JSON.stringify(this.state.keyboardData.practicingSong))\n    songToPractice.start = start\n    this.setState({\n      keyboardData: this.state.keyboardData,\n      thereIsSong: true\n    }, () => {\n      let event = new CustomEvent(\"practiceSong\", { detail: songToPractice })\n      window.dispatchEvent(event)\n    })\n  }\n  //to add the composed songs\n  songExists = async (name) => {\n    return await this.dbCol.songs.findOne({ name: name }) !== undefined\n  }\n  addSong = async (song) => {\n    if (await this.songExists(song.name)) {\n      return new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\n    }\n    await this.dbCol.songs.insert(song)\n    this.syncSongs()\n  }\n  componentDidCatch(){\n    new LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\n    this.stopSong()\n  }\n  removeSong = async (name) => {\n    let result = await asyncConfirm(`Are you sure you want to delete the song: \"${name}\" ?`)\n    if(result){\n      this.dbCol.songs.remove({ name: name }, this.syncSongs)\n    }\n  }\n  handleRecording = (note) => {\n    if (this.state.isRecording) {\n      this.recording.addNote(note.index)\n    }\n  }\n  handleSliderEvent = (event) => {\n\n    this.changeSliderState({\n      position: Number(event.target.value),\n      size: this.state.sliderState.size\n    })\n  }\n  stopSong = () => {\n    return new Promise(resolve => {\n      this.setState({\n        thereIsSong: false,\n        keyboardData: {\n          practicingSong: new PlayingSong([]),\n          playingSong: new PlayingSong([])\n        }\n      }, () => {\n        let event = new CustomEvent(\"playSong\", { detail: new PlayingSong([]) })\n        window.dispatchEvent(event)\n        event = new CustomEvent(\"practiceSong\", { detail: new PlayingSong([]) })\n        window.dispatchEvent(event)\n        resolve()\n      })\n    })\n  }\n  changeSliderState = (newState) => {\n    this.setState({\n      sliderState: newState\n    })\n  }\n  playSong = async (song) => {\n    await this.stopSong()\n\n    if (song.data.isComposedVersion) {\n      song = ComposerToRecording(song)\n    }\n    let playingSong = {\n      timestamp: new Date().getTime(),\n      notes: song.notes\n    }\n    this.state.keyboardData.playingSong = playingSong\n    this.setState({\n      keyboardData: this.state.keyboardData,\n      thereIsSong: true\n    })\n    let event = new CustomEvent(\"playSong\", { detail: playingSong })\n    window.dispatchEvent(event)\n  }\n\n  toggleRecord = async (override) => {\n    if (typeof override !== \"boolean\") override = undefined\n    let newState = override !== undefined ? override : !this.state.isRecording\n    if (!newState && this.recording.notes.length > 0) {\n      let songName\n      let promptString = \"Write song name, press cancel to ignore\"\n      while (true) {\n        songName = await asyncPrompt(promptString)\n        if (songName === null) break\n        if (songName !== \"\") {\n          if (await this.songExists(songName)) {\n            promptString = \"This song already exists: \" + songName\n          } else {\n            break\n          }\n        } else {\n          promptString = \"Write song name, press cancel to ignore\"\n        }\n      }\n      let song = new Song(songName, this.recording.notes)\n      if (songName !== null) this.addSong(song)\n    } else {\n      this.recording = new Recording()\n      let eventData = new PlayingSong([])\n      let event = new CustomEvent(\"playSong\", { detail: eventData })\n      window.dispatchEvent(event)\n    }\n    this.state.isRecording = newState\n    this.setState({\n      open: this.state.isRecording\n    })\n  }\n  render() {\n    let state = this.state\n    let keyboardFunctions = {\n      handleRecording: this.handleRecording,\n      changeSliderState: this.changeSliderState,\n      stopSong: this.stopSong\n    }\n    let menuFunctions = {\n      addSong: this.addSong,\n      removeSong: this.removeSong,\n      playSong: this.playSong,\n      practiceSong: this.practiceSong,\n      stopSong: this.stopSong,\n      changePage: this.props.changePage,\n      handleSettingChange: this.handleSettingChange\n    }\n    let menuData = {\n      songs: state.songs,\n      settings: this.state.settings\n    }\n\n    return <div className=\"app\">\n      <div className=\"rotate-screen\">\n        <img src={rotateImg}>\n        </img>\n          For a better experience, add the website to the home screen, and rotate your device\n      </div>\n\n      <Menu functions={menuFunctions} data={menuData} />\n      <div className=\"right-panel\">\n        <div className=\"upper-right\">\n          <GenshinButton\n            active={state.isRecording}\n            click={this.toggleRecord}\n          >\n            {state.isRecording ? \"Stop\" : \"Record\"}\n          </GenshinButton>\n        </div>\n        <div className=\"keyboard-wrapper\">\n          <div className={this.state.thereIsSong ? \"slider-wrapper\" : \"slider-wrapper hidden-opacity\"}>\n            <button className=\"song-button\" onClick={this.stopSong}>\n              <FontAwesomeIcon icon={faStop} />\n            </button>\n            <input\n              type=\"range\"\n              className=\"slider\"\n              min={0}\n              onChange={this.handleSliderEvent}\n              max={state.sliderState.size}\n              value={state.sliderState.position}\n            ></input>\n            <button className=\"song-button\" onClick={() => this.practiceSong(state.keyboardData.practicingSong, state.sliderState.position)}>\n              <FontAwesomeIcon icon={faSyncAlt} />\n            </button>\n          </div>\n\n          <Keyboard\n            data={state.keyboardData}\n            settings={this.state.settings}\n            functions={keyboardFunctions}\n            isRecording={state.isRecording}\n          />\n        </div>\n\n      </div>\n\n    </div>\n  }\n}\n\n\n\nfunction GenshinButton(props) {\n  let className = \"genshin-button \" + (props.active ? \"selected\" : \"\")\n  return <button className={className} onClick={props.click}>\n    {props.children}\n  </button>\n}\nexport default App;\n","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave, faMusic, faTimes, faCog, faTrash, faCompactDisc } from '@fortawesome/free-solid-svg-icons'\r\nimport \"../../menu/menu.css\"\r\n\r\nimport { FileDownloader, LoggerEvent } from \"../../SongUtils\"\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Settings\",\r\n            selectedSongType: \"composed\",\r\n        }\r\n    }\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n        if(newState === false){\r\n            this.props.functions.toggleMenuVisible()\r\n        }\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json, song.name + \".json\")\r\n    }\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        let selectedMenu = this.state.selectedMenu\r\n        const { loadSong, removeSong, updateSong, changePage, handleSettingChange } = functions\r\n        let songFunctions = {\r\n            loadSong: loadSong,\r\n            removeSong: removeSong,\r\n            toggleMenu: this.toggleMenu\r\n        }\r\n        let songs = data.songs.filter(song => !song.data?.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data?.isComposedVersion)\r\n        let hasUnsaved = data.hasChanges ? \"margin-top-auto not-saved\" : \"margin-top-auto\"\r\n        let menuClass = data.menuOpen ? \"menu menu-visible\" : \"menu\"\r\n        return <div className=\"menu-wrapper\">\r\n            <div className={menuClass}>\r\n                <CloseMenu action={this.toggleMenu} />\r\n                <MenuItem type=\"Save\" action={() => updateSong(data.currentSong)} className={hasUnsaved}>\r\n                    <FontAwesomeIcon icon={faSave} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"App\")} className=\"inverted\">\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                        <button className=\"genshin-button\" onClick={this.props.functions.createNewSong}>\r\n                            Create new song\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper no-margin\">\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\">\r\n                        Support me\r\n                    </a>\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\n\r\nfunction SongRow(props) {\r\n    const { data, functions } = props\r\n    const { removeSong, toggleMenu, loadSong } = functions\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            loadSong(data)\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => removeSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1] ) {\r\n                return\r\n            }\r\n        }\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if(data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e){\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : <input\r\n                type={data.type}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />}\r\n    </div>\r\n}\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\nexport default Menu","import React, { Component } from 'react'\r\nimport isMobile from \"is-mobile\"\r\nclass ComposerNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    shouldComponentUpdate(next, prev) {\r\n        return this.props.layers !== next.layers\r\n    }\r\n    render() {\r\n        const { data, layers } = this.props\r\n        let className = \"note-composer \"\r\n        let noteText = isMobile() ? data.noteNames.mobile : data.noteNames.keyboard\r\n        if (layers[0] === \"1\") className += \" layer-1\"\r\n        if (layers[1] === \"1\") className += \" layer-2\"\r\n        if (layers[2] === \"1\") className += \" layer-3\"\r\n        return <button onPointerDown={() => this.props.clickAction(data)} className=\"button-hitbox\">\r\n            <div className={className} >\r\n                <img\r\n                    alt={data.noteNames.mobile}\r\n                    src={`./assets/icons/keys/${data.noteNames.mobile}.svg`}>\r\n\r\n                </img>\r\n                <div className=\"layer-3-ball\">\r\n                </div>\r\n                <div className=\"note-name\">\r\n                    {noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerNote","import React, { Component } from 'react'\r\n\r\nclass MultiSwitch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let props = this.props\r\n        return <>\r\n            {props.options.map(e => {\r\n                return <button\r\n                    style={{ backgroundColor: e === props.selected ? props.selectedColor : \"\" }}\r\n                    className={props.buttonsClass}\r\n                    onClick={() => props.onSelect(e)}\r\n                >\r\n                    {e}\r\n                </button>\r\n            })}\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MultiSwitch\r\n\r\n","import React, { Component } from 'react'\r\nimport ComposerNote from \"./ComposerNote\"\r\nimport MultiSwitch from \"./MultiSwitch\"\r\nclass ComposerKeyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let notesIndexes = data.currentColumn.notes.map((e) => e.index)\r\n        return <div>\r\n            <div className=\"keyboard\">\r\n                {data.keyboard.layout.map((note, i) => {\r\n                    let index = notesIndexes.indexOf(i)\r\n                    return <ComposerNote\r\n                        key={note.index}\r\n                        layers={index >= 0 ? data.currentColumn.notes[index].layer : \"000\"}\r\n                        data={note}\r\n                        clickAction={functions.handleClick}\r\n                    />\r\n                })}\r\n            </div>\r\n            <div className=\"bottom-right-wrapper\">\r\n                <div className={\"layer-buttons-wrapper\"}>\r\n                    <div className=\"bottom-right-text\">\r\n                        Layer\r\n                    </div>\r\n                    <MultiSwitch\r\n                        buttonsClass={\"layer-button\"}\r\n                        selectedColor={\"#63aea7\"}\r\n                        options={[1, 2, 3]}\r\n                        onSelect={functions.changeLayer}\r\n                        selected={data.layer}\r\n                    />\r\n                </div>\r\n                <div className=\"tempo-changers-wrapper\">\r\n                    <div className=\"bottom-right-text\">\r\n                        Tempo\r\n                    </div>\r\n                    {data.TempoChangers.map((e) => {\r\n                        return <button\r\n                            key={e.id}\r\n                            onClick={() => functions.handleTempoChanger(e)}\r\n                            style={{ backgroundColor: \"#\" + e.color.toString(16) }}\r\n                        >\r\n                            {e.text}\r\n                        </button>\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerKeyboard","import { TempoChangers } from \"../SongUtils\"\r\nimport * as PIXI from \"pixi.js\"\r\nlet noteData = {\r\n    background: \"#d3bd8e\",\r\n    border: \"#de4545\",\r\n    center: \"#de4545\"\r\n}\r\nlet horizontalLineBreak = 7\r\nlet standards = [\r\n    {\r\n        color: 0x515c6f //lighter\r\n    },\r\n    {\r\n        color: 0x485363 //darker\r\n    },\r\n    {\r\n        color: 0x1a968b //selected\r\n    }\r\n]\r\nlet notes = [\"000\", \"001\", \"010\", \"011\", \"100\", \"101\", \"110\", \"111\"]\r\nlet breakpoints = [\r\n    {\r\n        type: \"short\",\r\n        color: \"#c44350\"\r\n    },\r\n    {\r\n        type: \"long\",\r\n        color: \"#c44350\"\r\n    }\r\n]\r\nclass ComposerCache {\r\n    constructor(width, height, margin = 4, timelineHeight = 30) {\r\n        this.width = width\r\n        this.height = height\r\n        this.cache = {\r\n            columns: [],\r\n            notes: {},\r\n            standard: [],\r\n            columnsLarger: [],\r\n            standardLarger: [],\r\n            breakpoints: []\r\n        }\r\n        this.notesFigures = []\r\n        this.timelineHeight = timelineHeight\r\n        this.margin = margin\r\n        this.noteWidth = this.width\r\n        this.noteHeight = this.height / 21\r\n        this.app = new PIXI.Application({\r\n            width: width,\r\n            height: height,\r\n        })\r\n        this.generate()\r\n    }\r\n    generate = () => {\r\n\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 1)\r\n            this.cache.columns.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 1)\r\n            this.cache.standard.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 3)\r\n            this.cache.standardLarger.push(canvas.toDataURL())\r\n        })\r\n        notes.forEach(note => {\r\n            let roundNess = this.noteWidth > 20 ? 4 : 2\r\n            let canvas = document.createElement(\"canvas\")\r\n            canvas.height = this.noteHeight\r\n            canvas.width = this.noteWidth\r\n            let ctx = canvas.getContext(\"2d\")\r\n            if (note[0] === \"1\") {\r\n                ctx.fillStyle = noteData.background\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    true,\r\n                    false\r\n                )\r\n            }\r\n            if (note[1] === \"1\") {\r\n                ctx.strokeStyle = noteData.border\r\n                ctx.lineWidth = 2\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    false,\r\n                    true\r\n                )\r\n            }\r\n            if (note[2] === \"1\") {\r\n                ctx.beginPath()\r\n                ctx.fillStyle = noteData.center\r\n                ctx.arc(this.noteWidth / 2 - 0.5, this.noteHeight / 2 - 0.5, this.noteHeight / 5, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n            }\r\n            this.cache.notes[note] = canvas.toDataURL()\r\n        })\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 2)\r\n            this.cache.columnsLarger.push(canvas.toDataURL())\r\n        })\r\n        breakpoints.forEach(breakpoint => {\r\n            let canvas = document.createElement(\"canvas\")\r\n            if (breakpoint.type === \"short\") {\r\n                let size = this.timelineHeight / 6\r\n                canvas.height = this.timelineHeight\r\n                canvas.width = size * 2\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                ctx.arc(size, this.timelineHeight / 2, size, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            } else {\r\n                canvas.height = this.height\r\n                canvas.width = this.width\r\n                let size = this.width / 4\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                let x = this.width / 2 - this.margin / 4\r\n                ctx.arc(x, 0, size, 0, 2 * Math.PI);\r\n                ctx.arc(x, this.height, size, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction drawColumn(tempoChanger, self, borderWidth) {\r\n    let canvas = document.createElement(\"canvas\")\r\n    canvas.height = self.height\r\n    canvas.width = self.width\r\n    let ctx = canvas.getContext(\"2d\")\r\n    ctx.fillStyle = \"#\" + tempoChanger.color.toString(16)\r\n    ctx.fillRect(0, 0, self.width, self.height)\r\n    ctx.strokeStyle = borderWidth === 2 ? \"black\" : \"#333333\"\r\n    ctx.lineWidth = borderWidth\r\n    ctx.beginPath()\r\n    ctx.moveTo(self.width, 0)\r\n    ctx.lineTo(self.width, self.height)\r\n    ctx.stroke()\r\n    ctx.strokeStyle = \"#333333\"\r\n    for (let i = 1; i < 3; i++) {\r\n        ctx.lineWidth = 1\r\n        let y = self.noteHeight * horizontalLineBreak * i\r\n        ctx.moveTo(0, y)\r\n        ctx.lineTo(self.width, y)\r\n    }\r\n    ctx.stroke()\r\n    return canvas\r\n}\r\n\r\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n    if (typeof stroke === 'undefined') {\r\n        stroke = true;\r\n    }\r\n    if (typeof radius === 'undefined') {\r\n        radius = 5;\r\n    }\r\n    if (typeof radius === 'number') {\r\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\r\n    } else {\r\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\r\n        for (var side in defaultRadius) {\r\n            radius[side] = radius[side] || defaultRadius[side];\r\n        }\r\n    }\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + radius.tl, y);\r\n    ctx.lineTo(x + width - radius.tr, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n    ctx.lineTo(x + width, y + height - radius.br);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n    ctx.lineTo(x + radius.bl, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n    ctx.lineTo(x, y + radius.tl);\r\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n    ctx.closePath();\r\n    if (fill) {\r\n        ctx.fill();\r\n    }\r\n    if (stroke) {\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\nexport {\r\n    ComposerCache\r\n}","import React, { Component } from 'react'\r\nimport { Stage, Container, Graphics, Sprite } from '@inlet/react-pixi';\r\nimport { ComposerCache } from \"./ComposerCache\"\r\nimport { faStepBackward, faStepForward, faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"./Composer.css\"\r\nimport isMobile from \"is-mobile\"\r\nlet NumOfColumnsPerCanvas = 35\r\n\r\nclass ComposerCanvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        NumOfColumnsPerCanvas = Number(this.props.data.settings.columnsPerCanvas.value)\r\n        let width = nearestEven(window.screen.width * 0.82)\r\n        let height = nearestEven(window.screen.height * 0.45)\r\n\r\n        if (window.screen.width < window.screen.height) {\r\n            width = nearestEven(window.screen.height * 0.82)\r\n            height = nearestEven(window.screen.width * 0.45)\r\n        }\r\n        this.state = {\r\n            width: width,\r\n            height: height,\r\n            column: {\r\n                width: calcMinColumnWidth(nearestEven(width)),\r\n                height: height\r\n            },\r\n            timelineHeight: isMobile() ? 25 : 30,\r\n            currentBreakpoint: -1\r\n        }\r\n        this.canvasRef = React.createRef()\r\n        let margin = isMobile() ? 1 : 4\r\n        this.cache = new ComposerCache(this.state.column.width, height, margin, this.state.timelineHeight).cache\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n        this.throttleStage = 0\r\n    }\r\n    resetPointerDown = (e) => {\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"pointerup\", this.resetPointerDown)\r\n        this.canvasRef.current._canvas.addEventListener(\"wheel\", this.handleWheel)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"pointerup\", this.resetPointerDown)\r\n        this.canvasRef.current._canvas.removeEventListener(\"wheel\", this.handleWheel)\r\n    }\r\n    handleWheel = (e) => {\r\n        if (e.deltaY < 0) {\r\n            this.props.functions.selectColumn(this.props.data.selected - 1, true)\r\n        } else {\r\n            this.props.functions.selectColumn(this.props.data.selected + 1, true)\r\n        }\r\n    }\r\n    handleClick = (e, type) => {\r\n        let x = e.data.global.x\r\n        if (type === \"click\") {\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos)\r\n        }\r\n        if (type === \"up\") {\r\n            this.sliderSelected = false\r\n        }\r\n        if (type === \"down\") {\r\n            this.sliderSelected = true\r\n        }\r\n        if (type === \"downStage\") {\r\n            this.stagePreviousPositon = x\r\n            this.stageSelected = true\r\n        }\r\n    }\r\n    handleStageSlide = (e) => {\r\n        let x = e.data.global.x\r\n        if (this.stageSelected === true) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 4) return\r\n            this.throttleStage = 0\r\n            let isMovingLeft = this.stagePreviousPositon < x\r\n            let amount = Math.floor(Math.abs(this.stagePreviousPositon - x) / 4)\r\n            if (amount > 4) amount = 4\r\n            let toAdd = isMovingLeft ? -1 : 1\r\n            this.stagePreviousPositon = x\r\n            if (this.props.data.selected === this.props.data.selected + toAdd * amount) return\r\n            this.props.functions.selectColumn(this.props.data.selected + toAdd * amount, true)\r\n        }\r\n    }\r\n    handleBreakpoints = (direction) => {\r\n        let selectedColumn = this.props.data.selected\r\n        let columns = this.props.data.columns\r\n        let breakpoint\r\n        let breakpoints = this.props.data.breakpoints\r\n        if (direction === 1) {//right\r\n            breakpoint = breakpoints.filter((v) => v > selectedColumn).sort((a, b) => a - b)\r\n        } else {\r\n            breakpoint = breakpoints.filter((v) => v < selectedColumn).sort((a, b) => b - a)\r\n        }\r\n        if (breakpoint.length >= 0) {\r\n            if (columns.length >= breakpoint[0] && breakpoint[0] >= 0) {\r\n                this.props.functions.selectColumn(breakpoint[0])\r\n            }\r\n        }\r\n\r\n    }\r\n    handleSlide = (e) => {\r\n        if (this.sliderSelected) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 4) return\r\n            this.throttleStage = 0\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n            let x = e.data.global.x\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos, true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let s = this.state\r\n        let pixiOptions = {\r\n            backgroundColor: 0x495466,\r\n        }\r\n        const { data, functions } = this.props\r\n        let sizes = this.state.column\r\n        let xPos = (data.selected - NumOfColumnsPerCanvas / 2 + 1) * - sizes.width\r\n        let timelineHeight = this.state.timelineHeight\r\n        let counter = 0\r\n        let switcher = false\r\n        let cache = this.cache\r\n        let beatMarks = Number(data.settings.beatMarks.value)\r\n        let counterLimit = beatMarks === 0 ? 14 : beatMarks * 5 - 1\r\n\r\n        let relativeColumnWidth = this.state.width / data.columns.length\r\n        let stageSize = Math.floor(relativeColumnWidth * (NumOfColumnsPerCanvas + 1))\r\n        if (stageSize > this.state.width) stageSize = this.state.width\r\n        let stagePos = relativeColumnWidth * data.selected - (NumOfColumnsPerCanvas / 2 - 1) * relativeColumnWidth\r\n\r\n        return <div className=\"canvas-wrapper\" style={{ width: s.width + 6 }}>\r\n            <Stage\r\n                width={s.width}\r\n                height={s.height}\r\n                options={pixiOptions}\r\n                key={this.state.width}\r\n                ref={this.canvasRef}\r\n            >\r\n                <Container\r\n                    anchor={[0.5, 0.5]}\r\n                    x={xPos}\r\n                    interactive={true}\r\n                    pointerdown={(e) => this.handleClick(e, \"downStage\")}\r\n                    pointermove={(e) => this.handleStageSlide(e)}\r\n                >\r\n                    {data.columns.map((column, i) => {\r\n                        if (counter > counterLimit) {\r\n                            switcher = !switcher\r\n                            counter = 0\r\n                        }\r\n                        counter++\r\n                        if (!isVisible(i, data.selected)) return null\r\n                        let tempoChangersCache = (i + 1) % beatMarks === 0 ? cache.columnsLarger : cache.columns\r\n                        let standardCache = (i + 1) % beatMarks === 0 ? cache.standardLarger : cache.standard\r\n                        let standardBg = standardCache[Number(switcher)] // boolean is 1 or 0\r\n                        let background = column.tempoChanger === 0 ? standardBg : tempoChangersCache[column.tempoChanger]\r\n                        background = data.selected === i ? standardCache[2] : background\r\n                        return <Column\r\n                            cache={cache}\r\n                            key={i}\r\n                            data={column}\r\n                            index={i}\r\n                            sizes={sizes}\r\n                            backgroundCache={background}\r\n                            click={functions.selectColumn}\r\n                            isSelected={i === data.selected}\r\n                            isBreakpoint={this.props.data.breakpoints.includes(i)}\r\n                        />\r\n\r\n                    })}\r\n                </Container>\r\n            </Stage>\r\n            <div className=\"timeline-wrapper\" style={{ height: this.state.timelineHeight }}>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(-1)}>\r\n                    <FontAwesomeIcon icon={faStepBackward} />\r\n                </div>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(1)}>\r\n                    <FontAwesomeIcon icon={faStepForward} />\r\n                </div>\r\n\r\n\r\n                <Stage\r\n                    width={s.width}\r\n                    height={timelineHeight}\r\n                    options={{ antialias: true, autoDensity: true }}\r\n                >\r\n                    <Container\r\n                        width={this.state.width}\r\n                        height={this.state.timelineHeight}\r\n                        interactive={true}\r\n                        pointertap={(e) => this.handleClick(e, \"click\")}\r\n                        pointerdown={(e) => this.handleClick(e, \"down\")}\r\n                        pointerup={(e) => this.handleClick(e, \"up\")}\r\n                        pointermove={this.handleSlide}\r\n                    >\r\n                        <Graphics draw={(e) => { fillX(e, this.state.width, this.state.timelineHeight) }} />\r\n                        {data.breakpoints.map(breakpoint => {\r\n                            return <Sprite\r\n                                image={cache.breakpoints[0]}\r\n                                x={relativeColumnWidth * breakpoint}\r\n\r\n                            >\r\n\r\n                            </Sprite>\r\n                        })}\r\n                    </Container>\r\n\r\n                    <Graphics draw={(e) => drawStage(e, stageSize, this.state.timelineHeight)} x={stagePos} y={2} />\r\n\r\n\r\n                </Stage>\r\n                <div className=\"timeline-button\" onClick={functions.toggleBreakpoint}>\r\n                    <FontAwesomeIcon icon={data.breakpoints.includes(data.selected) ? faMinusCircle : faPlusCircle} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction fillX(g, width, height) {\r\n    g.clear()\r\n    g.beginFill(0x515c6f, 1)\r\n    g.drawRect(0, 0, width, height)\r\n}\r\nfunction drawStage(g, width, height) {\r\n    g.clear()\r\n    g.lineStyle(3, 0x1a968b, 0.8)\r\n    g.drawRoundedRect(0, 0, width - 2, height - 4, 6)\r\n}\r\n\r\nfunction Column(props) {\r\n    let { data, index, sizes, click, cache, backgroundCache, isBreakpoint } = props\r\n    return <Container\r\n        pointertap={() => click(index)}\r\n        interactive={true}\r\n        x={sizes.width * index}\r\n\r\n    >\r\n        <Sprite\r\n            image={backgroundCache}\r\n            interactiveChildren={false}\r\n        >\r\n        </Sprite>\r\n        {data.notes.map((note) => {\r\n            return <Sprite\r\n                key={note.index}\r\n                image={cache.notes[note.layer]}\r\n                y={positions[note.index] * sizes.height / 21}\r\n            >\r\n\r\n            </Sprite>\r\n        })}\r\n        {isBreakpoint ? <Sprite\r\n            image={cache.breakpoints[1]}\r\n        >\r\n\r\n        </Sprite> : null}\r\n    </Container>\r\n}\r\nfunction calcMinColumnWidth(parentWidth) {\r\n    return nearestEven(parentWidth / NumOfColumnsPerCanvas)\r\n}\r\nfunction nearestEven(num) {\r\n    return 2 * Math.round(num / 2);\r\n}\r\nfunction isVisible(pos, currentPos) {\r\n    let threshold = NumOfColumnsPerCanvas / 2 + 2\r\n    let boundaries = [currentPos - threshold, currentPos + threshold]\r\n    return boundaries[0] < pos && pos < boundaries[1]\r\n}\r\nconst positions = [14, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6].reverse()\r\nexport default ComposerCanvas","export default __webpack_public_path__ + \"static/media/addCell.0252d665.svg\";","export default __webpack_public_path__ + \"static/media/removeCell.caa23d0c.svg\";","import React, { Component } from 'react'\r\nimport ZangoDb from \"zangodb\"\r\nimport Menu from \"./Components/Composer/menu/Menu\"\r\nimport { ComposedSong, LoggerEvent, ColumnNote, Column, TempoChangers,\r\n     ComposerSongSerialization, ComposerSongDeSerialization, getPitchChanger,RecordingToComposed } from \"./Components/SongUtils\"\r\nimport { faPlay, faPlus, faPause, faBars, faChevronLeft, faChevronRight, faLayerGroup } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport rotateImg from \"./assets/icons/rotate.svg\"\r\nimport ComposerKeyboard from \"./Components/Composer/ComposerKeyboard\"\r\nimport ComposerCanvas from \"./Components/Composer/ComposerCanvas\"\r\nimport Instrument from \"./Components/audio/Instrument\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { ComposerSettings } from \"./Components/Composer/SettingsObj\"\r\nimport addCell from \"./assets/icons/addCell.svg\"\r\nimport {asyncConfirm,asyncPrompt} from \"./Components/AsyncPrompts\"\r\nimport removeCell from \"./assets/icons/removeCell.svg\"\r\nclass Composer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.db = new ZangoDb.Db(\"Genshin\", { songs: [] })\r\n        this.dbCol = {\r\n            songs: this.db.collection(\"songs\")\r\n\r\n        }\r\n        let settings = this.getSettings()\r\n        this.playbackInterval = undefined\r\n        this.state = {\r\n            instrument: new Instrument(),\r\n            layers: [new Instrument(), new Instrument()],\r\n            audioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            reverbAudioContext: new (window.AudioContext || window.webkitAudioContext)(), \r\n            songs: [],\r\n            isPlaying: false,\r\n            song: new ComposedSong(\"Untitled\"),\r\n            settings: settings,\r\n            menuOpen: false,\r\n            layer: 1\r\n        }\r\n        this.hasChanges = false\r\n        this.syncSongs()\r\n        this.loadInstrument(\"lyre\", 1)\r\n        this.loadInstrument(\"lyre\", 2)\r\n        this.loadInstrument(\"lyre\", 3)\r\n        try{\r\n            this.loadReverb()\r\n        }catch{\r\n            console.log(\"Error with reverb\")\r\n        }\r\n        this.previousTime = new Date().getTime()\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard)\r\n    }\r\n    componentDidCatch(){\r\n        this.setState({\r\n            song: new ComposedSong(\"Untitled\")\r\n        })\r\n        new LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\r\n    }\r\n    loadReverb() {\r\n        let audioCtx = this.state.audioContext\r\n        fetch(\"./assets/audio/reverb4.wav\")\r\n        .then(r => r.arrayBuffer().catch(function(){console.log(\"Error with reverb \")}))\r\n        .then(b => audioCtx.decodeAudioData(b, (impulse_response) => { \r\n            let convolver = audioCtx.createConvolver()\r\n            let gainNode = audioCtx.createGain()\r\n            gainNode.gain.value = 2.5\r\n            convolver.buffer = impulse_response\r\n            convolver.connect(gainNode)\r\n            gainNode.connect(audioCtx.destination)\r\n            this.setState({\r\n                reverbAudioContext:convolver\r\n            })\r\n        })).catch(function(){\r\n            console.log(\"Error with reverb\")\r\n        })\r\n    }\r\n    getSettings = () => {\r\n        let storedSettings = localStorage.getItem(\"Genshin_Composer_Settings\")\r\n        try {\r\n            storedSettings = JSON.parse(storedSettings)\r\n        } catch (e) {\r\n            storedSettings = null\r\n        }\r\n        if (storedSettings !== null) {\r\n            if (storedSettings.settingVesion !== ComposerSettings.settingVesion) {\r\n                this.updateSettings(ComposerSettings)\r\n                return ComposerSettings\r\n            }\r\n            return storedSettings\r\n        }\r\n        return ComposerSettings\r\n    }\r\n    updateSettings = (override) => {\r\n        let state\r\n        if (override !== undefined) {\r\n            state = override\r\n        } else {\r\n            state = this.state.settings\r\n        }\r\n        localStorage.setItem(\"Genshin_Composer_Settings\", JSON.stringify(state))\r\n    }\r\n    handleSettingChange = (setting) => {\r\n        let settings = this.state.settings\r\n        let data = setting.data\r\n        settings[setting.key].value = data.value\r\n        if (data.songSetting) {\r\n            this.state.song[setting.key] = data.value\r\n        }\r\n        if (setting.key === \"instrument\") this.loadInstrument(data.value, 1)\r\n        if (setting.key === \"layer2\") this.loadInstrument(data.value, 2)\r\n        if (setting.key === \"layer3\") this.loadInstrument(data.value, 3)\r\n        this.setState({\r\n            settings: settings,\r\n            song: this.state.song\r\n        }, () => {\r\n            this.updateSettings()\r\n            if (data.songSetting) this.updateSong(this.state.song)\r\n        })\r\n    }\r\n    loadInstrument = async (name, layer) => {\r\n        if (layer === 1) {\r\n            let newInstrument = new Instrument(name)\r\n            await newInstrument.load(this.state.audioContext)\r\n            this.setState({\r\n                instrument: newInstrument\r\n            })\r\n        } else {\r\n            let newInstrument = new Instrument(name)\r\n            let layers = this.state.layers\r\n            layers[layer - 2] = newInstrument\r\n            await layers[layer - 2].load(this.state.audioContext)\r\n            this.setState({\r\n                layers: layers\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleKeyboard = (event) => {\r\n        let letter = event.key.toUpperCase()\r\n        /*\r\n            let note = this.state.instrument.layout.find(e => e.noteNames.keyboard === letter)\r\n            if (note !== undefined) {\r\n                this.handleClick(note)\r\n            }\r\n        */\r\n       if(document.activeElement.tagName === \"INPUT\") return\r\n        switch (letter) {\r\n            case \"D\": this.selectColumn(this.state.song.selected + 1)\r\n                break;\r\n            case \"A\": this.selectColumn(this.state.song.selected - 1)\r\n                break;\r\n            case \"1\": this.handleTempoChanger(TempoChangers[0])\r\n                break;\r\n            case \"2\": this.handleTempoChanger(TempoChangers[1])\r\n                break;\r\n            case \"3\": this.handleTempoChanger(TempoChangers[2])\r\n                break;\r\n            case \"4\": this.handleTempoChanger(TempoChangers[3])\r\n                break;\r\n            case \" \": this.togglePlay()\r\n                break;\r\n            case \"\":\r\n                break;\r\n        }\r\n    }\r\n    playSound = (note) => {\r\n        const source = this.state.audioContext.createBufferSource()\r\n        source.buffer = note.buffer\r\n        source.playbackRate.value = getPitchChanger(this.state.settings.pitch.value)\r\n        if (this.state.settings.caveMode.value) {\r\n            source.connect(this.state.reverbAudioContext)\r\n        } else {\r\n            source.connect(this.state.audioContext.destination)\r\n        }\r\n        source.start(0)\r\n\r\n    }\r\n    handleClick = (note) => {\r\n        let column = this.state.song.columns[this.state.song.selected]\r\n        let index = column.notes.findIndex((n) => {\r\n            return note.index === n.index\r\n        })\r\n        let layerIndex = this.state.layer - 1\r\n        if (index < 0) { //if it doesn't exist, create a new one\r\n            let columnNote = new ColumnNote(note.index)\r\n            columnNote.layer = replaceAt(columnNote.layer, layerIndex, \"1\")\r\n            column.notes.push(columnNote)\r\n        } else { //if it exists, toggle the current layer and if it's 000 delete it\r\n            let currentNote = column.notes[index]\r\n            currentNote.layer = replaceAt(currentNote.layer, layerIndex, currentNote.layer[layerIndex] === \"0\" ? \"1\" : \"0\")\r\n            if (currentNote.layer === \"000\") column.notes.splice(index, 1)\r\n        }\r\n        this.setState({\r\n            song: this.state.song\r\n        })\r\n        this.hasChanges = true\r\n        this.playSound(note)\r\n    }\r\n    syncSongs = async () => {\r\n        let songs = await this.dbCol.songs.find().toArray()\r\n        songs = songs.map(song => {\r\n            if (song.data.isComposedVersion) {\r\n                return ComposerSongDeSerialization(song)\r\n            }\r\n            return song\r\n        })\r\n        this.setState({\r\n            composedSongs: songs,\r\n            songs: songs\r\n        })\r\n    }\r\n    addSong = async (song) => {\r\n        if (await this.songExists(song.name)) {\r\n            return new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\r\n        }\r\n        await this.dbCol.songs.insert(ComposerSongSerialization(song))\r\n        this.syncSongs()\r\n    }\r\n    updateSong = async (song) => {\r\n        if (song.name === \"Untitled\") {\r\n            let name = await this.askForSongName()\r\n            if (name === null) return\r\n            song.name = name\r\n            return this.addSong(song)\r\n\r\n        }\r\n        return new Promise(async resolve => {\r\n            if (await this.songExists(song.name)) {\r\n                await this.dbCol.songs.update({ name: song.name }, ComposerSongSerialization(song))\r\n                console.log(\"song saved:\", song.name)\r\n                this.hasChanges = false\r\n                this.syncSongs()\r\n            } else {\r\n                console.log(\"song doesn't exist\")\r\n                song.name = \"Untitled\"\r\n                this.updateSong(song)\r\n            }\r\n            resolve()\r\n        })\r\n    }\r\n    askForSongName = () => {\r\n        return new Promise(async resolve => {\r\n            let promptString = \"Write song name, press cancel to ignore\"\r\n            while (true) {\r\n                let songName = await asyncPrompt(promptString)\r\n                if (songName === null) return resolve(null)\r\n                if (songName !== \"\") {\r\n                    if (await this.songExists(songName)) {\r\n                        promptString = \"This song already exists: \" + songName\r\n                    } else {\r\n                        return resolve(songName)\r\n                    }\r\n                } else {\r\n                    promptString = \"Write song name, press cancel to ignore\"\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    askForSongUpdate = () => {\r\n        return new Promise(async resolve => {\r\n            let result = await asyncConfirm(`You have unsaved changes to the song: \"${this.state.song.name}\" do you want to save now?`) \r\n            resolve(result)\r\n        })\r\n    }\r\n    songExists = async (name) => {\r\n        return await this.dbCol.songs.findOne({ name: name }) !== undefined\r\n    }\r\n    createNewSong = async () => {\r\n        if (this.state.song.name !== \"Untitled\" && this.hasChanges) {\r\n            let wantsToSave = await this.askForSongUpdate()\r\n            if (wantsToSave) {\r\n                await this.updateSong(this.state.song)\r\n            }\r\n        }\r\n        let name = await this.askForSongName()\r\n        if (name === null) return\r\n        let song = new ComposedSong(name)\r\n        this.hasChanges = false\r\n        this.setState({\r\n            song: song\r\n        }, () => this.addSong(song))\r\n    }\r\n    removeSong = (name) => {\r\n        this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n    }\r\n    loadSong = async (song) => {\r\n        if(!song.data.isComposedVersion){\r\n            song = RecordingToComposed(song)\r\n            song.name += \" - Composed\"\r\n        }\r\n        let stateSong = this.state.song\r\n        if (stateSong.notes.length > 0) {\r\n            await this.updateSong(stateSong)\r\n        }\r\n        let settings = this.state.settings\r\n        settings.bpm.value = song.bpm\r\n        settings.pitch.value = song.pitch\r\n        this.hasChanges = false\r\n        this.setState({\r\n            song: song,\r\n            settings: settings\r\n        })\r\n    }\r\n    addColumns = (amount = 1, position = \"end\") => {\r\n        let columns = new Array(amount).fill().map(() => new Column())\r\n        let songColumns = this.state.song.columns\r\n        if (position === \"end\") {\r\n            songColumns.push(...columns)\r\n        } else {\r\n            songColumns.splice(position + 1, 0, ...columns)\r\n        }\r\n        if(amount === 1) this.selectColumn(this.state.song.selected + 1)\r\n        this.hasChanges = true\r\n        this.setState({\r\n            song: this.state.song\r\n        })\r\n    }\r\n    removeColumns = (amount, position) => {\r\n        let song = this.state.song\r\n        if(song.columns.length < 16) return\r\n        song.columns.splice(position, amount)\r\n        if(song.columns.length <= song.selected) this.selectColumn(song.selected - 1)\r\n        this.hasChanges = true\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    //----------------------------------------------//\r\n\r\n    togglePlay = async (override) => {\r\n        let newState = typeof override === \"boolean\" ? override : !this.state.isPlaying\r\n        this.setState({\r\n            isPlaying: newState\r\n        }, async () => {\r\n            this.selectColumn(this.state.song.selected)\r\n            while (this.state.isPlaying) {\r\n                let state = this.state\r\n                const { song, settings } = state\r\n                let tempoChanger = TempoChangers[song.columns[song.selected]?.tempoChanger]\r\n                let msPerBPM = Math.floor(60000 / settings.bpm.value * tempoChanger?.changer)\r\n                await delayMs(msPerBPM)\r\n                this.previousTime = new Date().getTime()\r\n                this.handleTick()\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    handleTick = () => {\r\n        let newIndex = this.state.song.selected + 1\r\n        if (this.state.isPlaying && newIndex > this.state.song.columns.length - 1) {\r\n            return this.togglePlay(false)\r\n        }\r\n        this.selectColumn(this.state.song.selected + 1)\r\n\r\n    }\r\n    toggleMenuVisible = () => {\r\n        this.setState({\r\n            menuOpen: !this.state.menuOpen\r\n        })\r\n    }\r\n    toggleBreakpoint = () => {\r\n        let song = this.state.song\r\n        let index = song.selected\r\n\r\n        let indexOfBreakpoint = song.breakpoints.indexOf(index)\r\n        if (indexOfBreakpoint >= 0 && song.columns.length > index) {\r\n            song.breakpoints.splice(indexOfBreakpoint, 1)\r\n        } else if (song.columns.length > index) {\r\n            song.breakpoints.push(index)\r\n        }\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    handleTempoChanger = (changer) => {\r\n        let song = this.state.song\r\n        song.columns[this.state.song.selected].tempoChanger = changer.id\r\n        this.hasChanges = true\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    selectColumn = (index, ignoreAudio) => {\r\n        const state = this.state\r\n        let song = state.song\r\n        if (index < 0 || index > song.columns.length - 1) return\r\n        let keyboard = state.instrument.layout\r\n        let layers = state.layers.map(e => e.layout)\r\n        let currentColumn = state.song.columns[index]\r\n        song.selected = index\r\n        this.setState({\r\n            song: song\r\n        })\r\n        if (ignoreAudio) return\r\n        currentColumn.notes.forEach(note => {\r\n            if (note.layer[0] === \"1\") this.playSound(keyboard[note.index])\r\n            if (note.layer[1] === \"1\") this.playSound(layers[0][note.index])\r\n            if (note.layer[2] === \"1\") this.playSound(layers[1][note.index])\r\n        })\r\n    }\r\n    changeLayer = (layer) => {\r\n        this.setState({\r\n            layer: layer\r\n        })\r\n    }\r\n    render() {\r\n\r\n        const { state, props } = this\r\n        let song = state.song\r\n        let menuData = {\r\n            songs: state.songs,\r\n            currentSong: state.song,\r\n            settings: state.settings,\r\n            hasChanges: this.hasChanges,\r\n            menuOpen: state.menuOpen\r\n        }\r\n        let menuFunctions = {\r\n            loadSong: this.loadSong,\r\n            removeSong: this.removeSong,\r\n            createNewSong: this.createNewSong,\r\n            changePage: props.changePage,\r\n            updateSong: this.updateSong,\r\n            handleSettingChange: this.handleSettingChange,\r\n            toggleMenuVisible: this.toggleMenuVisible\r\n        }\r\n        let keyboardFunctions = {\r\n            handleClick: this.handleClick,\r\n            handleTempoChanger: this.handleTempoChanger,\r\n            changeLayer: this.changeLayer\r\n        }\r\n        let keyboardData = {\r\n            keyboard: state.instrument,\r\n            currentColumn: state.song.columns[state.song.selected],\r\n            TempoChangers: TempoChangers,\r\n            layer: state.layer\r\n        }\r\n        let canvasFunctions = {\r\n            selectColumn: this.selectColumn,\r\n            toggleBreakpoint: this.toggleBreakpoint\r\n        }\r\n        let canvasData = {\r\n            columns: song.columns,\r\n            selected: song.selected,\r\n            settings: state.settings,\r\n            breakpoints: state.song.breakpoints\r\n        }\r\n        return <div className=\"app\">\r\n            <div className=\"hamburger\" onClick={this.toggleMenuVisible}>\r\n                <FontAwesomeIcon icon={faBars} />\r\n\r\n            </div>\r\n            <div className=\"rotate-screen\">\r\n                <img src={rotateImg}>\r\n                </img>\r\n                    For a better experience, add the website to the home screen, and rotate your device\r\n            </div>\r\n            <div className=\"right-panel-composer\">\r\n                <div className=\"column fill-x\">\r\n\r\n                    <div className=\"top-panel-composer\">\r\n                        <div className=\"buttons-composer-wrapper\">\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected + 1)}>\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected - 1)}>\r\n                                <FontAwesomeIcon icon={faChevronLeft} />\r\n                            </div>\r\n\r\n                            <div className=\"tool\" onClick={this.togglePlay}>\r\n                                <FontAwesomeIcon icon={this.state.isPlaying ? faPause : faPlay} />\r\n                            </div>\r\n                        </div>\r\n                        <ComposerCanvas\r\n                            key={this.state.settings.columnsPerCanvas.value}\r\n                            functions={canvasFunctions}\r\n                            data={canvasData}\r\n                        />\r\n                        <div className=\"buttons-composer-wrapper\">\r\n\r\n                            <div className=\"tool\" onClick={() => this.addColumns(1, song.selected)}>\r\n                                <img src={addCell} className=\"tool-icon\" />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.removeColumns(1, song.selected)}>\r\n                                <img src={removeCell} className=\"tool-icon\" />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.addColumns(this.state.settings.beatMarks.value === 4 ? 20 : 15, \"end\")}>\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <ComposerKeyboard\r\n                    functions={keyboardFunctions}\r\n                    data={keyboardData}\r\n                />\r\n            </div>\r\n            <Menu\r\n                data={menuData}\r\n                functions={menuFunctions}\r\n            />\r\n            <div className=\"song-info\">\r\n                <div>\r\n                    {song.name}\r\n                </div>\r\n                <div>\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.selected))}\r\n                     /\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.columns.length))}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nfunction formatMillis(millis) {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n}\r\nfunction calculateLength(song, end) {\r\n    let columns = song.columns\r\n    let bpmPerMs = Math.floor(60000 / song.bpm)\r\n    let totalLength = 0\r\n    columns.forEach((column, i) => {\r\n        if (i > end) return\r\n        totalLength += bpmPerMs * TempoChangers[column.tempoChanger].changer\r\n    })\r\n    return totalLength\r\n}\r\nfunction delayMs(ms) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\nfunction replaceAt(string, index, replacement) {\r\n    if (index >= string.length) {\r\n        return string.valueOf();\r\n    }\r\n\r\n    return string.substring(0, index) + replacement + string.substring(index + 1);\r\n}\r\nexport default Composer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Composer from \"./Composer\"\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport \"./App.css\"\n\n\nclass Index extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      floatingMessage: {\n        timestamp: 0,\n        visible: false,\n        text: \"Text\",\n        title: \"Title\"\n      },\n      selectedPage: \"App\"\n    }\n  }\n  componentDidMount() {\n    window.addEventListener('logEvent', this.logEvent);\n  }\n  changePage = (page) => {\n    this.setState({\n      selectedPage: page\n    })\n  }\n  componentWillUnmount() {\n    window.removeEventListener('logEvent', this.logEvent);\n  }\n  logEvent = (error) => {\n    error = error.detail\n    error.timestamp = new Date().getTime()\n    if (typeof error !== \"object\") return\n    this.setState({\n      floatingMessage: {\n        timestamp: error.timestamp,\n        visible: true,\n        text: error.text,\n        title: error.title\n      }\n    })\n    setTimeout(() => {\n      if (this.state.floatingMessage.timestamp !== error.timestamp) return\n      this.setState({\n        floatingMessage: {\n          timestamp: 0,\n          visible: false,\n          text: \"\",\n          title: \"\"\n        }\n      })\n    }, error.timeout)\n  }\n  render() {\n    let floatingMessage = this.state.floatingMessage\n    let floatingMessageClass = floatingMessage.visible ? \"floating-message floating-message-visible\" : \"floating-message\"\n\n    return <div className=\"index\">\n      <div className={floatingMessageClass}>\n        <div className=\"floating-message-title\">\n          {floatingMessage.title}\n        </div>\n        <div className=\"floating-message-text\">\n          {floatingMessage.text}\n        </div>\n      </div>\n      {this.state.selectedPage === \"App\" ? <App changePage={this.changePage} /> : <></>}\n      {this.state.selectedPage === \"Composer\" ? <Composer changePage={this.changePage} /> : <></>}\n    </div>\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}